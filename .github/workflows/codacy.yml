name: Codacy Java Scan

on:
  push:
    branches: [ main, 2022-12, 2022-09, 2022-06 ]
  pull_request:
    branches: [ main, 2022-12, 2022-09, 2022-06 ]
  schedule:
    - cron: '39 1 * * 4'

permissions:
  contents: read

jobs:
  codacy-java-tools:
    name: Codacy Java Tools
    runs-on: ubuntu-latest
    timeout-minutes: 55   # Safety-Net unterhalb GitHub 6h-Hardlimit
    permissions:
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        tool: [ spotbugs, pmd, checkstyle ]   # nur Java-Tools
    steps:
      - name: Set up Maven
        uses: stCarolas/setup-maven@d6af6abeda15e98926a57b5aa970a96bb37f97d1
        with:
          maven-version: 3.9.3

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build (no tests)
        run: mvn -B -DskipTests package

      # Optional: zeigt verdächtige .java-Dateien, die nicht UTF-8 sind (bricht nicht ab)
      - name: Detect non-UTF8 Java files
        run: |
          set -e
          bad="$(git ls-files '*.java' | xargs -I{} bash -lc 'iconv -f UTF-8 -t UTF-8 "{}" >/dev/null 2>&1 || echo "{}"' || true)"
          if [ -n "$bad" ]; then
            echo "::warning title=Non-UTF8 Java files detected::${bad}"
          fi

      - name: Run Codacy Analysis CLI (${{ matrix.tool }})
        uses: codacy/codacy-analysis-cli-action@v4
        env:
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8   # Encoding erzwingen
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          tool: ${{ matrix.tool }}                   # gezielt: spotbugs/pmd/checkstyle
          directory: src                             # <— nur src/ analysieren
          verbose: true
          format: sarif
          output: ${{ runner.temp }}/results-${{ matrix.tool }}.sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647
          skip-uncommitted-files-check: true
          tool-timeout: 1hour

      # Split pro Tool-SARIF in einzelne runs (GitHub verlangt 1 Run je Upload/Kategorie)
      - name: Split SARIF into single-run files (${{ matrix.tool }})
        shell: bash
        env:
          SARIF: ${{ runner.temp }}/results-${{ matrix.tool }}.sarif
          OUTDIR: ${{ runner.temp }}/sarif_split_${{ matrix.tool }}
        run: |
          set -euo pipefail
          if [ ! -s "$SARIF" ]; then
            echo "No SARIF produced for ${{ matrix.tool }} -> skip."
            exit 0
          fi
          mkdir -p "$OUTDIR"
          runs=$(jq '.runs | length' "$SARIF")
          echo "Found $runs runs in $SARIF"
          for ((i=0; i<runs; i++)); do
            jq --argjson i "$i" '{ "$schema": ."$schema", "version": .version, runs: [ .runs[$i] ] }' "$SARIF" > "$OUTDIR/run-$i.sarif"
          done

      # Upload: pro Run eigene Kategorie (verhindert Ablehnung seit 2025-07)
      - name: Upload SARIF run 0 (${{ matrix.tool }})
        if: ${{ hashFiles(format('{0}/sarif_split_{1}/run-0.sarif', runner.temp, matrix.tool)) != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ${{ runner.temp }}/sarif_split_${{ matrix.tool }}/run-0.sarif
          category: codacy-${{ matrix.tool }}-run-0
          wait-for-processing: true

      - name: Upload SARIF run 1 (${{ matrix.tool }})
        if: ${{ hashFiles(format('{0}/sarif_split_{1}/run-1.sarif', runner.temp, matrix.tool)) != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ${{ runner.temp }}/sarif_split_${{ matrix.tool }}/run-1.sarif
          category: codacy-${{ matrix.tool }}-run-1
          wait-for-processing: true

      - name: Upload SARIF run 2 (${{ matrix.tool }})
        if: ${{ hashFiles(format('{0}/sarif_split_{1}/run-2.sarif', runner.temp, matrix.tool)) != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ${{ runner.temp }}/sarif_split_${{ matrix.tool }}/run-2.sarif
          category: codacy-${{ matrix.tool }}-run-2
          wait-for-processing: true